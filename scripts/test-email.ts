/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—á—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
 * –ó–∞–ø—É—Å–∫: npx tsx scripts/test-email.ts <email>
 */

import { createTransport } from "nodemailer";
import { env } from "~/env";

async function testEmail(testEmail: string) {
  try {
    console.log("üìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—á—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...\n");

    console.log("üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:");
    console.log(`   Host: ${env.EMAIL_SERVER_HOST}`);
    console.log(`   Port: ${env.EMAIL_SERVER_PORT}`);
    console.log(`   User: ${env.EMAIL_SERVER_USER}`);
    console.log(`   From: ${env.EMAIL_FROM}`);
    console.log(`   Secure: ${Number(env.EMAIL_SERVER_PORT) === 465}\n`);

    const transport = createTransport({
      host: env.EMAIL_SERVER_HOST,
      port: Number(env.EMAIL_SERVER_PORT),
      secure: Number(env.EMAIL_SERVER_PORT) === 465,
      auth: {
        user: env.EMAIL_SERVER_USER,
        pass: env.EMAIL_SERVER_PASSWORD,
      },
      tls: {
        rejectUnauthorized: false,
      },
    });

    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å SMTP —Å–µ—Ä–≤–µ—Ä–æ–º...");
    await transport.verify();
    console.log("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å SMTP —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å–ø–µ—à–Ω–æ!\n");

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞...");
    const result = await transport.sendMail({
      from: env.EMAIL_FROM,
      to: testEmail,
      subject: "–¢–µ—Å—Ç –ø–æ—á—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ - OncopraxiA",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #333;">üéâ –ü–æ—á—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!</h2>
          <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.</p>
          <div style="background: #f5f5f5; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <h3>–î–µ—Ç–∞–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:</h3>
            <ul>
              <li><strong>Host:</strong> ${env.EMAIL_SERVER_HOST}</li>
              <li><strong>Port:</strong> ${env.EMAIL_SERVER_PORT}</li>
              <li><strong>From:</strong> ${env.EMAIL_FROM}</li>
              <li><strong>–í—Ä–µ–º—è:</strong> ${new Date().toLocaleString("ru-RU")}</li>
            </ul>
          </div>
          <p style="color: #666; font-size: 14px;">
            –ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç NextAuth –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
          </p>
        </div>
      `,
      text: `
–¢–µ—Å—Ç –ø–æ—á—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ - OncopraxiA

–ü–æ—á—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

–î–µ—Ç–∞–ª–∏:
- Host: ${env.EMAIL_SERVER_HOST}
- Port: ${env.EMAIL_SERVER_PORT}
- From: ${env.EMAIL_FROM}
- –í—Ä–µ–º—è: ${new Date().toLocaleString("ru-RU")}
      `,
    });

    console.log("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!");
    console.log(`üì¨ MessageId: ${result.messageId}`);
    console.log(`üìß –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${testEmail}\n`);
    console.log("üéØ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ (–≤–∫–ª—é—á–∞—è —Å–ø–∞–º)!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ—á—Ç—ã:");
    if (error instanceof Error) {
      console.error(`   ${error.message}\n`);

      // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è Mail.ru
      if (
        error.message.includes("535") ||
        error.message.includes("NEOBHODIM parol prilozheniya")
      ) {
        console.log("üí° –†–µ—à–µ–Ω–∏–µ –¥–ª—è Mail.ru:");
        console.log("   1. –í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é");
        console.log("   2. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:");
        console.log("      https://account.mail.ru/user/2-step-auth/passwords");
        console.log(
          "   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ EMAIL_SERVER_PASSWORD\n",
        );
      }

      if (
        error.message.includes("ECONNREFUSED") ||
        error.message.includes("timeout")
      ) {
        console.log("üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:");
        console.log("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ö–æ—Å—Ç–∞ –∏ –ø–æ—Ä—Ç–∞");
        console.log(
          "   2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç (587 –≤–º–µ—Å—Ç–æ 465 –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç)",
        );
        console.log("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞\n");
      }
    } else {
      console.error(error);
    }
  } finally {
    process.exit(0);
  }
}

// –ü–æ–ª—É—á–∞–µ–º email –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const testEmail = process.argv[2];

if (!testEmail) {
  console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:");
  console.error(
    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx scripts/test-email.ts test@example.com",
  );
  process.exit(1);
}

if (!testEmail.includes("@")) {
  console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å");
  process.exit(1);
}

void testEmail(testEmail);
