"use client";

import { useState, Suspense, useEffect } from "react";
import { useSearchParams } from "next/navigation";
import Link from "next/link";

const errorMessages = {
  Configuration: {
    title: "–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
    description:
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
    icon: "‚öôÔ∏è",
    color: "red",
  },
  AccessDenied: {
    title: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
    description:
      "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–µ—Å—É—Ä—Å—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.",
    icon: "üö´",
    color: "red",
  },
  Verification: {
    title: "–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
    description:
      "–°—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏–ª–∏ —Å—Ä–æ–∫ –µ—ë –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.",
    icon: "‚ö†Ô∏è",
    color: "yellow",
  },
  Default: {
    title: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞",
    description:
      "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
    icon: "‚ùå",
    color: "red",
  },
  Signin: {
    title: "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞",
    description:
      "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
    icon: "üîê",
    color: "red",
  },
  OAuthSignin: {
    title: "–û—à–∏–±–∫–∞ OAuth –≤—Ö–æ–¥–∞",
    description:
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
    icon: "üîó",
    color: "red",
  },
  OAuthCallback: {
    title: "–û—à–∏–±–∫–∞ OAuth",
    description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.",
    icon: "üîó",
    color: "red",
  },
  OAuthCreateAccount: {
    title: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞",
    description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å.",
    icon: "üë§",
    color: "red",
  },
  EmailCreateAccount: {
    title: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞",
    description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º email –∞–¥—Ä–µ—Å–æ–º.",
    icon: "üìß",
    color: "red",
  },
  Callback: {
    title: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞",
    description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.",
    icon: "üîÑ",
    color: "red",
  },
  OAuthAccountNotLinked: {
    title: "–ê–∫–∫–∞—É–Ω—Ç –Ω–µ —Å–≤—è–∑–∞–Ω",
    description:
      "–≠—Ç–æ—Ç email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º.",
    icon: "üîó",
    color: "yellow",
  },
  EmailSignin: {
    title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email",
    description:
      "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –¥–ª—è –≤—Ö–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å email –∞–¥—Ä–µ—Å–∞.",
    icon: "üìß",
    color: "red",
  },
  CredentialsSignin: {
    title: "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
    description: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.",
    icon: "üîê",
    color: "red",
  },
  SessionRequired: {
    title: "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
    description: "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.",
    icon: "üîí",
    color: "blue",
  },
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å search parameters
function SearchParamsHandler({
  onParamsReceived,
}: {
  onParamsReceived: (error: string) => void;
}) {
  const searchParams = useSearchParams();
  const error = searchParams.get("error") ?? "Default";

  useEffect(() => {
    onParamsReceived(error);
  }, [error, onParamsReceived]);

  return null;
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—à–∏–±–∫–∏
function AuthErrorContent({ error }: { error: string }) {
  const errorInfo =
    errorMessages[error as keyof typeof errorMessages] || errorMessages.Default;

  const getColorClasses = (color: string) => {
    switch (color) {
      case "red":
        return {
          bg: "bg-red-100",
          border: "border-red-200",
          icon: "text-red-600",
          title: "text-red-900",
          text: "text-red-800",
        };
      case "yellow":
        return {
          bg: "bg-yellow-100",
          border: "border-yellow-200",
          icon: "text-yellow-600",
          title: "text-yellow-900",
          text: "text-yellow-800",
        };
      case "blue":
        return {
          bg: "bg-blue-100",
          border: "border-blue-200",
          icon: "text-blue-600",
          title: "text-blue-900",
          text: "text-blue-800",
        };
      default:
        return {
          bg: "bg-gray-100",
          border: "border-gray-200",
          icon: "text-gray-600",
          title: "text-gray-900",
          text: "text-gray-800",
        };
    }
  };

  const colors = getColorClasses(errorInfo.color);

  return (
    <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-blue-50 via-white to-red-50 px-4">
      <div className="w-full max-w-md">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8 text-center">
          <Link href="/" className="inline-block">
            <h1 className="mb-2 text-3xl font-bold text-gray-900">
              –û–Ω–∫–æ–Ω–∞—Å—Ç–æ—Ä–æ–∂–µ–Ω–Ω–æ—Å—Ç—å
            </h1>
            <p className="text-gray-600">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç–∞–ª —Ä–∞–Ω–Ω–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            </p>
          </Link>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
        <div className="rounded-2xl border border-gray-200 bg-white/90 p-8 text-center shadow-lg backdrop-blur-sm">
          {/* –ò–∫–æ–Ω–∫–∞ –æ—à–∏–±–∫–∏ */}
          <div
            className={`h-20 w-20 ${colors.bg} mx-auto mb-6 flex items-center justify-center rounded-full`}
          >
            <span className="text-4xl">{errorInfo.icon}</span>
          </div>

          <h2 className={`text-2xl font-bold ${colors.title} mb-4`}>
            {errorInfo.title}
          </h2>

          <p className="mb-6 leading-relaxed text-gray-600">
            {errorInfo.description}
          </p>

          {/* –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ */}
          {error !== "Default" && (
            <div
              className={`${colors.bg} ${colors.border} mb-6 rounded-lg border p-4`}
            >
              <p className={`${colors.text} text-sm`}>
                <strong>–ö–æ–¥ –æ—à–∏–±–∫–∏:</strong> {error}
              </p>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="space-y-3">
            {error === "Verification" || error === "EmailSignin" ? (
              <Link
                href="/auth/signin"
                className="block w-full rounded-full bg-red-600 px-6 py-3 text-center font-semibold text-white transition-colors hover:bg-red-700"
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </Link>
            ) : error === "SessionRequired" ? (
              <Link
                href="/auth/signin"
                className="block w-full rounded-full bg-blue-600 px-6 py-3 text-center font-semibold text-white transition-colors hover:bg-blue-700"
              >
                –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
              </Link>
            ) : (
              <Link
                href="/auth/signin"
                className="block w-full rounded-full bg-red-600 px-6 py-3 text-center font-semibold text-white transition-colors hover:bg-red-700"
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–æ–π—Ç–∏ —Å–Ω–æ–≤–∞
              </Link>
            )}

            <Link
              href="/"
              className="block w-full rounded-full border-2 border-gray-300 px-6 py-3 text-center font-semibold text-gray-700 transition-colors hover:bg-gray-50"
            >
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Link>
          </div>
        </div>

        {/* –ü–æ–º–æ—â—å */}
        <div className="mt-8 rounded-xl border border-gray-200 bg-gray-50/80 p-6 backdrop-blur-sm">
          <div className="text-center">
            <div className="mx-auto mb-3 flex h-8 w-8 items-center justify-center rounded-full bg-gray-600">
              <svg
                className="h-4 w-4 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fillRule="evenodd"
                  d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z"
                  clipRule="evenodd"
                />
              </svg>
            </div>
            <h3 className="mb-2 text-sm font-semibold text-gray-900">
              –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?
            </h3>
            <p className="mb-3 text-xs leading-relaxed text-gray-600">
              –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø–æ—Ä—Ç–∞–ª–∞ –∏–ª–∏
              –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
            </p>
            <div className="space-y-1 text-xs text-gray-500">
              <p>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É</p>
              <p>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ email –∞–¥—Ä–µ—Å –≤–≤–µ–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ</p>
              <p>‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞</p>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="mt-6 text-center">
          <p className="mb-3 text-sm text-gray-600">
            –†–∞–Ω–Ω—è—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–ø–∞—Å–∞–µ—Ç –∂–∏–∑–Ω–∏
          </p>
        </div>
      </div>
    </div>
  );
}

// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å Suspense
export default function AuthError() {
  const [error, setError] = useState("Default");

  const handleParamsReceived = (newError: string) => {
    setError(newError);
  };

  return (
    <Suspense
      fallback={
        <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-blue-50 via-white to-red-50">
          <div className="h-8 w-8 animate-spin rounded-full border-b-2 border-red-600"></div>
        </div>
      }
    >
      <SearchParamsHandler onParamsReceived={handleParamsReceived} />
      <AuthErrorContent error={error} />
    </Suspense>
  );
}
