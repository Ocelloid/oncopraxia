"use client";

import { Select, SelectItem, Input, Card, CardBody } from "@heroui/react";
import { type UserFormData } from "~/types/cancer-risk";

interface RiskFactorsFormProps {
  formData: UserFormData;
  updateFormData: (updates: Partial<UserFormData>) => void;
}

export default function RiskFactorsForm({
  formData,
  updateFormData,
}: RiskFactorsFormProps) {
  return (
    <div className="space-y-2">
      {/* –í—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ */}
      <Card className="border-l-4 border-l-red-400">
        <CardBody className="space-y-2">
          <h3 className="flex items-center gap-2 text-lg font-semibold text-gray-800">
            <span>üö¨</span>
            –í—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
          </h3>
          {/* –ö—É—Ä–µ–Ω–∏–µ */}
          <Select
            label="–ö—É—Ä–µ–Ω–∏–µ"
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∫—É—Ä–µ–Ω–∏—è"
            selectedKeys={formData.smoking ? [formData.smoking] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({
                  smoking: selectedKey as "yes" | "former" | "no",
                });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
            }}
          >
            <SelectItem key="no">–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫—É—Ä–∏–ª(–∞)</SelectItem>
            <SelectItem key="former">–ë—Ä–æ—Å–∏–ª(–∞) –∫—É—Ä–∏—Ç—å</SelectItem>
            <SelectItem key="yes">–ö—É—Ä—é –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è</SelectItem>
          </Select>

          {/* –°—Ç–∞–∂ –∫—É—Ä–µ–Ω–∏—è (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—É—Ä–∏—Ç –∏–ª–∏ –±—Ä–æ—Å–∏–ª) */}
          {(formData.smoking === "yes" || formData.smoking === "former") && (
            <Input
              type="number"
              label="–°—Ç–∞–∂ –∫—É—Ä–µ–Ω–∏—è (–ª–µ—Ç)"
              placeholder="–°–∫–æ–ª—å–∫–æ –ª–µ—Ç –∫—É—Ä–∏–ª–∏/–∫—É—Ä–∏—Ç–µ"
              value={formData.smokingYears?.toString() ?? ""}
              onChange={(e) =>
                updateFormData({ smokingYears: parseInt(e.target.value) || 0 })
              }
              min="0"
              max="50"
              variant="bordered"
              size="md"
              classNames={{
                label: "text-sm font-medium text-gray-700 -mt-6",
              }}
            />
          )}

          {/* –ê–ª–∫–æ–≥–æ–ª—å */}
          <Select
            label="–£–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è"
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è"
            selectedKeys={formData.alcohol ? [formData.alcohol] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({
                  alcohol: selectedKey as
                    | "never"
                    | "rarely"
                    | "moderate"
                    | "frequent",
                });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
              listboxWrapper: "max-h-[400px]",
              popoverContent: "w-full min-w-[280px]",
            }}
          >
            <SelectItem key="never" textValue="–ù–∏–∫–æ–≥–¥–∞">
              <div className="flex flex-col">
                <span className="text-small">–ù–∏–∫–æ–≥–¥–∞</span>
              </div>
            </SelectItem>
            <SelectItem key="rarely" textValue="–†–µ–¥–∫–æ">
              <div className="flex flex-col">
                <span className="text-small">–†–µ–¥–∫–æ</span>
                <span className="text-tiny text-default-400">
                  –ø–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º
                </span>
              </div>
            </SelectItem>
            <SelectItem key="moderate" textValue="–£–º–µ—Ä–µ–Ω–Ω–æ">
              <div className="flex flex-col">
                <span className="text-small">–£–º–µ—Ä–µ–Ω–Ω–æ</span>
                <span className="text-tiny text-default-400">
                  1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é
                </span>
              </div>
            </SelectItem>
            <SelectItem key="frequent" textValue="–ß–∞—Å—Ç–æ">
              <div className="flex flex-col">
                <span className="text-small">–ß–∞—Å—Ç–æ</span>
                <span className="text-tiny text-default-400">
                  –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∏–ª–∏ –ø–æ—á—Ç–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
                </span>
              </div>
            </SelectItem>
          </Select>
        </CardBody>
      </Card>

      {/* –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ */}
      <Card className="border-l-4 border-l-green-400">
        <CardBody className="space-y-2">
          <h3 className="flex items-center gap-2 text-lg font-semibold text-gray-800">
            <span>üèÉ‚Äç‚ôÇÔ∏è</span>
            –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
          </h3>
          {/* –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
          <Select
            label="–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
            selectedKeys={
              formData.physicalActivity ? [formData.physicalActivity] : []
            }
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({
                  physicalActivity: selectedKey as "low" | "medium" | "high",
                });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
              listboxWrapper: "max-h-[400px]",
              popoverContent: "w-full min-w-[280px]",
            }}
          >
            <SelectItem key="low" textValue="–ù–∏–∑–∫–∞—è">
              <div className="flex flex-col">
                <span className="text-small">–ù–∏–∑–∫–∞—è</span>
                <span className="text-tiny text-default-400">
                  —Å–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
                </span>
              </div>
            </SelectItem>
            <SelectItem key="medium" textValue="–°—Ä–µ–¥–Ω—è—è">
              <div className="flex flex-col">
                <span className="text-small">–°—Ä–µ–¥–Ω—è—è</span>
                <span className="text-tiny text-default-400">
                  2-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é
                </span>
              </div>
            </SelectItem>
            <SelectItem key="high" textValue="–í—ã—Å–æ–∫–∞—è">
              <div className="flex flex-col">
                <span className="text-small">–í—ã—Å–æ–∫–∞—è</span>
                <span className="text-tiny text-default-400">
                  –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
                </span>
              </div>
            </SelectItem>
          </Select>

          {/* –ü–∏—Ç–∞–Ω–∏–µ */}
          <Select
            label="–ü–∏—Ç–∞–Ω–∏–µ"
            placeholder="–û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–∏—Ç–∞–Ω–∏—è"
            selectedKeys={formData.diet ? [formData.diet] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({
                  diet: selectedKey as "balanced" | "unbalanced",
                });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
              listboxWrapper: "max-h-[400px]",
              popoverContent: "w-full min-w-[320px]",
            }}
          >
            <SelectItem key="balanced" textValue="–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ">
              <div className="flex flex-col">
                <span className="text-small">–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ</span>
                <span className="text-tiny text-default-400">
                  —Ñ—Ä—É–∫—Ç—ã, –æ–≤–æ—â–∏, –º–∏–Ω–∏–º—É–º —Ñ–∞—Å—Ç—Ñ—É–¥–∞
                </span>
              </div>
            </SelectItem>
            <SelectItem key="unbalanced" textValue="–ù–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ">
              <div className="flex flex-col">
                <span className="text-small">–ù–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ</span>
                <span className="text-tiny text-default-400">
                  –º–Ω–æ–≥–æ –∂–∏—Ä–Ω–æ–π –ø–∏—â–∏, —Ñ–∞—Å—Ç—Ñ—É–¥–∞
                </span>
              </div>
            </SelectItem>
          </Select>
        </CardBody>
      </Card>

      {/* –ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å */}
      <Card className="border-l-4 border-l-purple-400">
        <CardBody className="space-y-2">
          <h3 className="flex items-center gap-2 text-lg font-semibold text-gray-800">
            <span>üß¨</span>
            –ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
          </h3>
          {/* –°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —Ä–∞–∫–∞ */}
          <Select
            label="–°–ª—É—á–∞–∏ —Ä–∞–∫–∞ –≤ —Å–µ–º—å–µ"
            placeholder="–ë—ã–ª–∏ –ª–∏ —Å–ª—É—á–∞–∏ —Ä–∞–∫–∞ —É —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤"
            selectedKeys={
              formData.familyHistory ? [formData.familyHistory] : []
            }
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({ familyHistory: selectedKey as "yes" | "no" });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
            }}
          >
            <SelectItem key="no">–ù–µ—Ç</SelectItem>
            <SelectItem key="yes">–î–∞, –±—ã–ª–∏ —Å–ª—É—á–∞–∏</SelectItem>
          </Select>

          {/* –°—Ç–µ–ø–µ–Ω—å —Ä–æ–¥—Å—Ç–≤–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è) */}
          {formData.familyHistory === "yes" && (
            <Input
              label="–°—Ç–µ–ø–µ–Ω—å —Ä–æ–¥—Å—Ç–≤–∞"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Ä–æ–¥–∏—Ç–µ–ª–∏, –±–∞–±—É—à–∫–∞, –¥–µ–¥—É—à–∫–∞"
              value={formData.familyRelation ?? ""}
              onChange={(e) =>
                updateFormData({ familyRelation: e.target.value })
              }
              variant="bordered"
              size="md"
              classNames={{
                label: "text-sm font-medium text-gray-700 -mt-6",
                inputWrapper: "mt-1",
              }}
            />
          )}
        </CardBody>
      </Card>

      {/* –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã */}
      <Card className="border-l-4 border-l-orange-400">
        <CardBody className="space-y-2">
          <h3 className="flex items-center gap-2 text-lg font-semibold text-gray-800">
            <span>üè≠</span>
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
          </h3>
          {/* –†–∞–±–æ—Ç–∞ —Å —Ö–∏–º–∏—á–µ—Å–∫–∏–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏ */}
          <Select
            label="–†–∞–±–æ—Ç–∞ —Å —Ö–∏–º–∏—á–µ—Å–∫–∏–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏"
            placeholder="–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ —Å —Ö–∏–º–∏–∫–∞—Ç–∞–º–∏"
            selectedKeys={formData.chemicals ? [formData.chemicals] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({ chemicals: selectedKey as "yes" | "no" });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
              listboxWrapper: "max-h-[400px]",
              popoverContent: "w-full min-w-[300px]",
            }}
          >
            <SelectItem key="no">–ù–µ—Ç</SelectItem>
            <SelectItem key="yes" textValue="–î–∞">
              <div className="flex flex-col">
                <span className="text-small">–î–∞</span>
                <span className="text-tiny text-default-400">
                  —Ä–∞–±–æ—Ç–∞—é —Å —Ö–∏–º–∏—á–µ—Å–∫–∏–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏
                </span>
              </div>
            </SelectItem>
          </Select>

          {/* –†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ */}
          <Select
            label="–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ"
            placeholder="–ü–æ–¥–≤–µ—Ä–≥–∞–ª–∏—Å—å –ª–∏ —Ä–∞–¥–∏–∞—Ü–∏–∏"
            selectedKeys={formData.radiation ? [formData.radiation] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({ radiation: selectedKey as "yes" | "no" });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
              listboxWrapper: "max-h-[400px]",
              popoverContent: "w-full min-w-[320px]",
            }}
          >
            <SelectItem key="no">–ù–µ—Ç</SelectItem>
            <SelectItem key="yes" textValue="–î–∞">
              <div className="flex flex-col">
                <span className="text-small">–î–∞</span>
                <span className="text-tiny text-default-400">
                  —Ä–∞–±–æ—Ç–∞—é –≤ —É—Å–ª–æ–≤–∏—è—Ö –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Ä–∞–¥–∏–∞—Ü–∏–∏
                </span>
              </div>
            </SelectItem>
          </Select>
        </CardBody>
      </Card>

      {/* –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è */}
      <Card className="border-l-4 border-l-blue-400">
        <CardBody className="space-y-2">
          <h3 className="flex items-center gap-2 text-lg font-semibold text-gray-800">
            <span>üè•</span>
            –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è
          </h3>
          {/* –°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç */}
          <Select
            label="–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç"
            placeholder="–ï—Å—Ç—å –ª–∏ –¥–∏–∞–≥–Ω–æ–∑ –¥–∏–∞–±–µ—Ç–∞"
            selectedKeys={formData.diabetes ? [formData.diabetes] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({ diabetes: selectedKey as "yes" | "no" });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
            }}
          >
            <SelectItem key="no">–ù–µ—Ç</SelectItem>
            <SelectItem key="yes">–î–∞, –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑</SelectItem>
          </Select>

          {/* –ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è */}
          <Select
            label="–ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è"
            placeholder="–ï—Å—Ç—å –ª–∏ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ"
            selectedKeys={formData.hypertension ? [formData.hypertension] : []}
            onSelectionChange={(keys) => {
              const selectedKey = Array.from(keys)[0] as string;
              if (!!selectedKey)
                updateFormData({ hypertension: selectedKey as "yes" | "no" });
            }}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
              trigger: "mt-1",
            }}
          >
            <SelectItem key="no">–ù–µ—Ç</SelectItem>
            <SelectItem key="yes">–î–∞, –µ—Å—Ç—å –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—è</SelectItem>
          </Select>

          {/* –î—Ä—É–≥–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è */}
          <Input
            label="–î—Ä—É–≥–∏–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è"
            placeholder="–£–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            value={formData.otherDiseases ?? ""}
            onChange={(e) => updateFormData({ otherDiseases: e.target.value })}
            variant="bordered"
            size="md"
            classNames={{
              label: "text-sm font-medium text-gray-700 -mt-6",
            }}
          />
        </CardBody>
      </Card>
    </div>
  );
}
