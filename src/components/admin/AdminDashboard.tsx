"use client";

import { Card, CardBody, CardHeader } from "@heroui/react";
// –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
const BarChart3 = () => <span>üìä</span>;
const Trophy = () => <span>üèÜ</span>;
const Building2 = () => <span>üè•</span>;
const Phone = () => <span>üìû</span>;
const FolderOpen = () => <span>üìÅ</span>;
const FileText = () => <span>üìÑ</span>;
const TrendingUp = () => <span>üìà</span>;
const Activity = () => <span>‚ö°</span>;
import { api } from "~/trpc/react";

export default function AdminDashboard() {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
  const { data: latestStats, isLoading: statsLoading } =
    api.info.getLatestStatistics.useQuery();
  const { data: activeContent, isLoading: contentLoading } =
    api.info.getActiveContent.useQuery();

  const statsCards = [
    {
      title: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
      value: latestStats ? `${latestStats.year} –≥–æ–¥` : "‚Äî",
      description: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ",
      icon: BarChart3,
      color: "bg-blue-500",
      href: "/admin/statistics",
    },
    {
      title: "–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
      value: (activeContent?.achievements?.length ?? 0).toString(),
      description: "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥",
      icon: Trophy,
      color: "bg-yellow-500",
      href: "/admin/achievements",
    },
    {
      title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è",
      value: (activeContent?.facilities?.length ?? 0).toString(),
      description: "–ê–∫—Ç–∏–≤–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π",
      icon: Building2,
      color: "bg-green-500",
      href: "/admin/facilities",
    },
    {
      title: "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã",
      value: (activeContent?.projects?.length ?? 0).toString(),
      description: "–¢–µ–∫—É—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º",
      icon: FolderOpen,
      color: "bg-purple-500",
      href: "/admin/projects",
    },
  ];

  const quickActions = [
    {
      title: "–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
      description: "–í–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞ –Ω–æ–≤—ã–π –≥–æ–¥",
      icon: TrendingUp,
      href: "/admin/statistics?action=create",
      color: "bg-blue-50 text-blue-700 border-blue-200",
    },
    {
      title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏",
      description: "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
      icon: Phone,
      href: "/admin/contacts",
      color: "bg-green-50 text-green-700 border-green-200",
    },
    {
      title: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º",
      description: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞",
      icon: FileText,
      href: "/admin/instructions",
      color: "bg-orange-50 text-orange-700 border-orange-200",
    },
  ];

  if (statsLoading || contentLoading) {
    return (
      <div className="space-y-6">
        <div className="animate-pulse">
          <div className="mb-4 h-8 w-1/3 rounded bg-gray-200"></div>
          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
            {[1, 2, 3, 4].map((i) => (
              <div key={i} className="h-32 rounded-lg bg-gray-200"></div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div>
        <h1 className="text-3xl font-bold text-gray-900">–î–∞—à–±–æ—Ä–¥</h1>
        <p className="mt-2 text-gray-600">
          –û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        </p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
        {statsCards.map((card, index) => {
          const Icon = card.icon;
          return (
            <Card
              key={index}
              className="cursor-pointer transition-transform hover:scale-105"
              isPressable
              onPress={() => {
                window.location.href = card.href;
              }}
            >
              <CardBody className="p-6">
                <div className="flex items-center">
                  <div className={`rounded-full p-3 ${card.color} text-white`}>
                    <Icon />
                  </div>
                  <div className="ml-4">
                    <p className="text-sm font-medium text-gray-600">
                      {card.title}
                    </p>
                    <p className="text-2xl font-bold text-gray-900">
                      {card.value}
                    </p>
                    <p className="text-xs text-gray-500">{card.description}</p>
                  </div>
                </div>
              </CardBody>
            </Card>
          );
        })}
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div>
        <h2 className="mb-4 text-xl font-semibold text-gray-900">
          –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        </h2>
        <div className="grid gap-4 md:grid-cols-3">
          {quickActions.map((action, index) => {
            const Icon = action.icon;
            return (
              <Card
                key={index}
                className="cursor-pointer border transition-all hover:shadow-md"
                isPressable
                onPress={() => {
                  window.location.href = action.href;
                }}
              >
                <CardBody className={`p-6 ${action.color} rounded-lg border`}>
                  <div className="flex items-start">
                    <Icon />
                    <div>
                      <h3 className="text-lg font-semibold">{action.title}</h3>
                      <p className="text-sm opacity-80">{action.description}</p>
                    </div>
                  </div>
                </CardBody>
              </Card>
            );
          })}
        </div>
      </div>

      {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ */}
      {latestStats && (
        <div>
          <h2 className="mb-4 text-xl font-semibold text-gray-900">
            –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </h2>
          <Card>
            <CardHeader>
              <div className="flex items-center">
                <Activity />
                <h3 className="text-lg font-semibold">
                  –î–∞–Ω–Ω—ã–µ –∑–∞ {latestStats.year} –≥–æ–¥
                </h3>
              </div>
            </CardHeader>
            <CardBody>
              <div className="grid gap-4 md:grid-cols-3">
                <div className="text-center">
                  <p className="text-2xl font-bold text-blue-600">
                    {latestStats.oncologyVisits.toLocaleString()}
                  </p>
                  <p className="text-sm text-gray-600">
                    –û–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π
                  </p>
                </div>
                <div className="text-center">
                  <p className="text-2xl font-bold text-green-600">
                    {latestStats.examinations.toLocaleString()}
                  </p>
                  <p className="text-sm text-gray-600">–ü—Ä–æ–≤–µ–¥–µ–Ω–æ –æ—Å–º–æ—Ç—Ä–æ–≤</p>
                </div>
                <div className="text-center">
                  <p className="text-2xl font-bold text-purple-600">
                    {latestStats.chemotherapyPatients.toLocaleString()}
                  </p>
                  <p className="text-sm text-gray-600">
                    –ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —Ö–∏–º–∏–æ—Ç–µ—Ä–∞–ø–∏–∏
                  </p>
                </div>
              </div>
            </CardBody>
          </Card>
        </div>
      )}
    </div>
  );
}
